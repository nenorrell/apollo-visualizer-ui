@import "./dark-theme.scss";
@import "./light-theme.scss";

@function map-collect($maps...) {
    $collection: ();
    @each $map in $maps {
        $collection: map-merge($collection, $map);
    }
    @return $collection;
}

$theme-colors: map-collect(
    $theme-dark-colors,
    $theme-light-colors
);

@mixin buildThemeCategory($theme, $theme-colors, $category){
    .theme-#{$category}{
        background: map-get($theme-colors, $category) !important;
        color: map-get($theme-colors, '#{$category}-text') !important;
    }
    .theme-#{$category}{
        p,h1,h2,h3,h4,h5,h6 {
            color: map-get($theme-colors, '#{$category}-text');
        }
        th,td {
            color: map-get($theme-colors, '#{$category}-text') !important;
        }
    }
    .theme-#{$category}-hover{
        background: map-get($theme-colors, $category) !important;
        color: map-get($theme-colors, '#{$category}-text') !important;
        &:hover{
            background: darken(map-get($theme-colors, $category), map-get($theme-colors, '#{$theme}-hover-modifier')) !important;
        }
    }

    .theme-#{$category}-bg{
        background: map-get($theme-colors, $category) !important;
    }
    .theme-#{$category}-bg-hover{
        background: map-get($theme-colors, $category) !important;
        &:hover{
            background: darken(map-get($theme-colors, $category), map-get($theme-colors, '#{$theme}-hover-modifier')) !important;
        }
    }

    .theme-#{$category}-color{
        color: map-get($theme-colors, $category) !important;
    }
    .theme-#{$category}-color-hover{
        color: map-get($theme-colors, $category) !important;
        &:hover{
            color: darken(map-get($theme-colors, $category), map-get($theme-colors, '#{$theme}-hover-modifier')) !important;
        }
    }

    .theme-#{$category}-border-color{
        border-color: map-get($theme-colors, $category) !important;
    }
    .theme-#{$category}-border-color-hover{
        border-color: map-get($theme-colors, $category) !important;
        &:hover{
            border-color: darken(map-get($theme-colors, $category), map-get($theme-colors, '#{$theme}-hover-modifier')) !important;
        }
    }

    .theme-#{$category}-select-override{
        .input:focus, .textarea:focus, .select select:focus, .is-focused.input, .is-focused.textarea, .select select.is-focused, .input:active, .textarea:active, .select select:active, .is-active.input, .is-active.textarea, .select select.is-active{
            border-color: map-get($theme-colors, $category) !important;
        }
        .select:not(.is-multiple):not(.is-loading)::after {
            border-color: map-get($theme-colors, $category) !important;
        }
        &:hover{
            border-color: darken(map-get($theme-colors, $category), map-get($theme-colors, '#{$theme}-hover-modifier')) !important;
        }
    }
}

@mixin buildThemeClasses($themes, $theme-colors) {
    @each $theme in $themes {
        @include buildThemeCategory($theme, $theme-colors, "#{$theme}-primary");
        @include buildThemeCategory($theme, $theme-colors, "#{$theme}-secondary");
        @include buildThemeCategory($theme, $theme-colors, "#{$theme}-accent");
        @include buildThemeCategory($theme, $theme-colors, "#{$theme}-accent-2");
        @include buildThemeCategory($theme, $theme-colors, "#{$theme}-success");
        @include buildThemeCategory($theme, $theme-colors, "#{$theme}-danger");
        @include buildThemeCategory($theme, $theme-colors, "#{$theme}-warning");
        @include buildThemeCategory($theme, $theme-colors, "#{$theme}-info");

        .theme-#{$theme}-light-color{
            color: map-get($theme-colors, '#{$theme}-light-text') !important;
        }
        .theme-#{$theme}-light-color-hover{
            color: map-get($theme-colors, '#{$theme}-light-text') !important;
            &:hover{
                color: darken(map-get($theme-colors, '#{$theme}-light-text'), map-get($theme-colors, '#{$theme}-hover-modifier')) !important;
            }
        }
        
        .theme-#{$theme}-text-color{
            color: map-get($theme-colors, '#{$theme}-text') !important;
        }
        .theme-#{$theme}-text-color-hover{
            color: map-get($theme-colors, '#{$theme}-text') !important;
            &:hover{
                color: darken(map-get($theme-colors, '#{$theme}-text'), map-get($theme-colors, '#{$theme}-hover-modifier')) !important;
            }
        }
        
        .theme-#{$theme}-dark-color{
            color: map-get($theme-colors, '#{$theme}-dark-text') !important;
        }
        .theme-#{$theme}-dark-color-hover{
            color: map-get($theme-colors, '#{$theme}-dark-text') !important;
            &:hover{
                color: darken(map-get($theme-colors, '#{$theme}-dark-text'), map-get($theme-colors, '#{$theme}-hover-modifier')) !important;
            }
        }

        .theme-#{$theme}-secondary-button{
            background: map-get($theme-colors, '#{$theme}-secondary') !important;
            color: map-get($theme-colors, '#{$theme}-light-text') !important;
            border: 0 !important;
            &:hover{
                background: lighten(map-get($theme-colors, '#{$theme}-secondary'), map-get($theme-colors, '#{$theme}-hover-modifier')) !important;
            }
        }
        
        .theme-#{$theme}-nav{
            color: map-get($theme-colors, '#{$theme}-text') !important;
            background: map-get($theme-colors, '#{$theme}-secondary') !important;
        }
    }   
};

@include buildThemeClasses(
    (
        'dark',
        'light'
    ), 
    $theme-colors
);